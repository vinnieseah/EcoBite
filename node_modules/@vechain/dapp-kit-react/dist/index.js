import{createContext as I,useCallback as a,useContext as i,useEffect as N,useMemo as R,useState as s}from"react";import{DAppKitUI as n}from"@vechain/dapp-kit-ui";import{subscribeKey as l}from"valtio/vanilla/utils";import{jsx as O}from"react/jsx-runtime";var r=I(void 0),X=({children:e,nodeUrl:u,genesis:p,walletConnectOptions:d,usePersistence:m=!1,logLevel:x,requireCertificate:C,themeMode:f,themeVariables:w,i18n:v,language:b,modalParent:h,onSourceClick:A,connectionCertificate:D})=>{let t=R(()=>n.configure({nodeUrl:u,genesis:p,walletConnectOptions:d,usePersistence:m,logLevel:x,requireCertificate:C,themeVariables:w,themeMode:f,i18n:v,language:b,modalParent:h,onSourceClick:A,connectionCertificate:D}),[u,p,d,m,x,C,w,f,v,b,h,A,D]),[K,k]=s(t.wallet.state.address),[S,y]=s(t.wallet.state.source),[W,B]=s(t.wallet.state.connectionCertificate);N(()=>{let c=l(t.wallet.state,"address",o=>{k(o)}),T=l(t.wallet.state,"source",o=>{y(o)}),F=l(t.wallet.state,"connectionCertificate",o=>{B(o)});return()=>{c(),T(),F()}},[t.wallet.state]);let P=a(()=>{n.modal.open()},[]),E=a(()=>{n.modal.close()},[]),M=a(c=>n.modal.onConnectionStatusChange(c),[]),g=R(()=>({connex:{thor:t.thor,vendor:t.vendor},wallet:{setSource:t.wallet.setSource,disconnect:t.wallet.disconnect,connect:t.wallet.connect,availableWallets:t.wallet.state.availableSources,account:K,source:S,connectionCertificate:W},modal:{open:P,close:E,onConnectionStatusChange:M}}),[t,K,S,E,P,M,W]);return O(r.Provider,{value:g,children:e})},Y=()=>{let e=i(r);if(!e)throw new Error('"useConnex" must be used within a ConnexProvider');return e.connex},Z=()=>{let e=i(r);if(!e)throw new Error('"useWallet" must be used within a ConnexProvider');return e.wallet},_=()=>{let e=i(r);if(!e)throw new Error('"useWalletModal" must be used within a ConnexProvider');return e.modal};import z from"react";import{Button as G}from"@vechain/dapp-kit-ui";import{createComponent as H}from"@lit/react";var et=H({tagName:"vdk-button",elementClass:G,react:z});export{X as DAppKitProvider,et as WalletButton,Y as useConnex,Z as useWallet,_ as useWalletModal};
//# sourceMappingURL=index.js.map